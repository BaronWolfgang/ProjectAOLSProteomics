gene_list_per_cluster <- split(names(row_clusters_h6), row_clusters_h6)
# Assuming `gene_list_per_cluster` is your original list
# Extract clusters 2 and 3
cluster_2 <- gene_list_per_cluster[[2]]
cluster_3 <- gene_list_per_cluster[[3]]
# Merge all other clusters (except 2 and 3) into a new cluster
other_clusters <- unlist(gene_list_per_cluster[-c(2, 3)], use.names = FALSE)
# Combine clusters 2, 3, and the merged 'other_clusters'
merged_gene_list <- list(
Cluster_1 = other_clusters,
Cluster_2 = cluster_2,
Cluster_3 = cluster_3
)
# Verify the result
str(merged_gene_list)
selected_compounds <- 'Thalidomide'
heatmap_data <- doseresponse_log2FC %>%
filter(!is.na(Genes), compound %in% selected_compounds) %>%
mutate(compound_dose = paste(compound, dose, sep = "_")) %>%
select(Genes, compound_dose, log2FC) %>%
pivot_wider(names_from = compound_dose, values_from = log2FC)
heatmap_data
heatmap_data_matrix <- heatmap_data %>%
column_to_rownames("Genes") %>%
.[rowSums(. == -Inf) == 0, ] %>%
mutate(
across(
everything(),
~ replace(replace(., is.infinite(.) & . < 0, min(.[is.finite(.)], na.rm = TRUE)), is.na(.), 0)
)
) %>%
#mutate(
#  across(
#    everything(),
#    ~ replace(replace(., is.infinite(.) & . < 0, min(.[is.finite(.)], na.rm = TRUE)), is.na(.), 0)
#    )
#  ) %>%
as.matrix()
conc_colnames <- heatmap_data %>%
select(-Genes) %>%
colnames() %>%
unique()
compound_group <- data.frame(
compound = rep(selected_compounds, each = 5)
)
rownames(compound_group) <- colnames(heatmap_data_matrix)
# Plot
p <- pheatmap::pheatmap(
heatmap_data_matrix,
color = colorRampPalette(c("blue", "white", "red"))(100),
breaks = unique(c(seq(min(heatmap_data_matrix, na.rm = TRUE), 0, length.out = 51),
seq(0, max(heatmap_data_matrix, na.rm = TRUE), length.out = 51))),
cluster_rows = TRUE,
cluster_cols = FALSE,
main = "Hierarchical Clustering of the proteins for Thalidomide",
na_col = "grey80",
show_rownames = FALSE,
show_colnames = TRUE,
#annotation_col = compound_group,
annotation_names_col = FALSE
)
cutree(p$tree_row, h = 3)
split(names(row_clusters_h6), row_clusters_h6)
rect.hclust(row_hclust, k = 4, border = "red")
plot(row_hclust, main = "Row Clustering Dendrogram", xlab = "", sub = "")
rect.hclust(row_hclust, k = 4, border = "red")
pheatmap::pheatmap(
heatmap_data_matrix,
color = colorRampPalette(c("blue", "white", "red"))(100),
breaks = unique(c(seq(min(heatmap_data_matrix, na.rm = TRUE), 0, length.out = 51),
seq(0, max(heatmap_data_matrix, na.rm = TRUE), length.out = 51))),
cluster_rows = TRUE,
cluster_cols = FALSE,
main = "Hierarchical Clustering of the proteins for Thalidomide",
na_col = "grey80",
show_rownames = FALSE,
show_colnames = TRUE,
#annotation_col = compound_group,
annotation_names_col = FALSE
)
row_hclust <- p$tree_row
rect.hclust(row_hclust, k = 4, border = "red")
cluster_assignments <- cutree(row_hclust, k = 4)
table(cluster_assignments)
row_hclust <- p$tree_row
# Plot the row dendrogram
plot(row_hclust, main = "Row Clustering Dendrogram", xlab = "", sub = "")
rect.hclust(row_hclust, k = 6, border = "red")
cluster_assignments <- cutree(row_hclust, k = 6)
table(cluster_assignments)
rect.hclust(row_hclust, h = 2, border = "red")
plot(row_hclust, main = "Row Clustering Dendrogram", xlab = "", sub = "")
rect.hclust(row_hclust, h = 2, border = "red")
cluster_assignments <- cutree(row_hclust, h = 2)
table(cluster_assignments)
plot(row_hclust, main = "Row Clustering Dendrogram", xlab = "", sub = "")
rect.hclust(row_hclust, h = 6, border = "red")
cluster_assignments <- cutree(row_hclust, h = 6)
table(cluster_assignments)
row_hclust <- p$tree_row
# Plot the row dendrogram
plot(row_hclust, main = "Row Clustering Dendrogram", xlab = "", sub = "")
rect.hclust(row_hclust, k = 4, border = "red")
cluster_assignments <- cutree(row_hclust, k = 6)
table(cluster_assignments)
pheatmap::pheatmap(
heatmap_data_matrix,
color = colorRampPalette(c("blue", "white", "red"))(100),
breaks = unique(c(seq(min(heatmap_data_matrix, na.rm = TRUE), 0, length.out = 51),
seq(0, max(heatmap_data_matrix, na.rm = TRUE), length.out = 51))),
cluster_rows = TRUE,
cluster_cols = FALSE,
main = "Hierarchical Clustering of the proteins for Thalidomide",
na_col = "grey80",
show_rownames = FALSE,
show_colnames = TRUE,
#annotation_col = compound_group,
annotation_names_col = FALSE,
cutree_rows = 3
)
pheatmap::pheatmap(
heatmap_data_matrix,
color = colorRampPalette(c("blue", "white", "red"))(100),
breaks = unique(c(seq(min(heatmap_data_matrix, na.rm = TRUE), 0, length.out = 51),
seq(0, max(heatmap_data_matrix, na.rm = TRUE), length.out = 51))),
cluster_rows = TRUE,
cluster_cols = FALSE,
main = "Hierarchical Clustering of the proteins for Thalidomide",
na_col = "grey80",
show_rownames = FALSE,
show_colnames = TRUE,
#annotation_col = compound_group,
annotation_names_col = FALSE,
cutree_rows = 1
)
pheatmap::pheatmap(
heatmap_data_matrix,
color = colorRampPalette(c("blue", "white", "red"))(100),
breaks = unique(c(seq(min(heatmap_data_matrix, na.rm = TRUE), 0, length.out = 51),
seq(0, max(heatmap_data_matrix, na.rm = TRUE), length.out = 51))),
cluster_rows = TRUE,
cluster_cols = FALSE,
main = "Hierarchical Clustering of the proteins for Thalidomide",
na_col = "grey80",
show_rownames = FALSE,
show_colnames = TRUE,
#annotation_col = compound_group,
annotation_names_col = FALSE,
cutree_rows = 10
)
selected_compounds <- 'Thalidomide'
heatmap_data <- doseresponse_log2FC %>%
filter(!is.na(Genes), compound %in% selected_compounds) %>%
mutate(compound_dose = paste(compound, dose, sep = "_")) %>%
select(Genes, compound_dose, log2FC) %>%
pivot_wider(names_from = compound_dose, values_from = log2FC)
heatmap_data
heatmap_data_matrix <- heatmap_data %>%
column_to_rownames("Genes") %>%
.[rowSums(. == -Inf) == 0, ] %>%
mutate(
across(
everything(),
~ replace(replace(., is.infinite(.) & . < 0, min(.[is.finite(.)], na.rm = TRUE)), is.na(.), 0)
)
) %>%
#mutate(
#  across(
#    everything(),
#    ~ replace(replace(., is.infinite(.) & . < 0, min(.[is.finite(.)], na.rm = TRUE)), is.na(.), 0)
#    )
#  ) %>%
as.matrix()
conc_colnames <- heatmap_data %>%
select(-Genes) %>%
colnames() %>%
unique()
compound_group <- data.frame(
compound = rep(selected_compounds, each = 5)
)
rownames(compound_group) <- colnames(heatmap_data_matrix)
# Plot
p <- pheatmap::pheatmap(
heatmap_data_matrix,
color = colorRampPalette(c("blue", "white", "red"))(100),
breaks = unique(c(seq(min(heatmap_data_matrix, na.rm = TRUE), 0, length.out = 51),
seq(0, max(heatmap_data_matrix, na.rm = TRUE), length.out = 51))),
cluster_rows = TRUE,
cluster_cols = FALSE,
main = "Hierarchical Clustering of the proteins for Thalidomide",
na_col = "grey80",
show_rownames = FALSE,
show_colnames = TRUE,
#annotation_col = compound_group,
annotation_names_col = FALSE
)
pheatmap::pheatmap(
heatmap_data_matrix,
color = colorRampPalette(c("blue", "white", "red"))(100),
breaks = unique(c(seq(min(heatmap_data_matrix, na.rm = TRUE), 0, length.out = 51),
seq(0, max(heatmap_data_matrix, na.rm = TRUE), length.out = 51))),
cluster_rows = TRUE,
cluster_cols = FALSE,
main = "Hierarchical Clustering of the proteins for Thalidomide",
na_col = "grey80",
show_rownames = FALSE,
show_colnames = TRUE,
#annotation_col = compound_group,
annotation_names_col = FALSE,
cutree_rows = 2
)
row_hclust <- p$tree_row
cluster_assignments <- cutree(row_hclust, k = 4)
# 3. Create row annotation dataframe
row_annotation <- data.frame(Cluster = as.factor(cluster_assignments))
rownames(row_annotation) <- names(cluster_assignments)
# 4. Replot heatmap with row annotation
p <- pheatmap(
heatmap_data_matrix,
color = colorRampPalette(c("blue", "white", "red"))(100),
breaks = unique(c(seq(min(heatmap_data_matrix, na.rm = TRUE), 0, length.out = 51),
seq(0, max(heatmap_data_matrix, na.rm = TRUE), length.out = 51))),
cluster_rows = TRUE,
cluster_cols = FALSE,
main = "Hierarchical Clustering of the proteins for Thalidomide (4 Clusters)",
na_col = "grey80",
show_rownames = FALSE,
show_colnames = TRUE,
annotation_row = row_annotation,
annotation_names_row = TRUE
)
row_hclust <- p$tree_row
cluster_assignments <- cutree(row_hclust, k = 6)
# 3. Create row annotation dataframe
row_annotation <- data.frame(Cluster = as.factor(cluster_assignments))
rownames(row_annotation) <- names(cluster_assignments)
# 4. Replot heatmap with row annotation
p <- pheatmap(
heatmap_data_matrix,
color = colorRampPalette(c("blue", "white", "red"))(100),
breaks = unique(c(seq(min(heatmap_data_matrix, na.rm = TRUE), 0, length.out = 51),
seq(0, max(heatmap_data_matrix, na.rm = TRUE), length.out = 51))),
cluster_rows = TRUE,
cluster_cols = FALSE,
main = "Hierarchical Clustering of the proteins for Thalidomide (4 Clusters)",
na_col = "grey80",
show_rownames = FALSE,
show_colnames = TRUE,
annotation_row = row_annotation,
annotation_names_row = TRUE
)
k_clusters <- 6
row_hclust <- p$tree_row
cluster_assignments <- cutree(row_hclust, k = k_clusters)
# 3. Create row annotation dataframe
row_annotation <- data.frame(Cluster = as.factor(cluster_assignments))
rownames(row_annotation) <- names(cluster_assignments)
# 4. Replot heatmap with row annotation
p <- pheatmap(
heatmap_data_matrix,
color = colorRampPalette(c("blue", "white", "red"))(100),
breaks = unique(c(seq(min(heatmap_data_matrix, na.rm = TRUE), 0, length.out = 51),
seq(0, max(heatmap_data_matrix, na.rm = TRUE), length.out = 51))),
cluster_rows = TRUE,
cluster_cols = FALSE,
main = paste0("Hierarchical Clustering of the proteins for Thalidomide (", k_clusters, " clusters)"),
na_col = "grey80",
show_rownames = FALSE,
show_colnames = TRUE,
annotation_row = row_annotation,
annotation_names_row = TRUE
)
selected_clusters <- which(cluster_assignments %in% c(2, 3))
selected_clusters
selected_clusters <- which(cluster_assignments %in% c(2, 3))
cluster_genes <- names(cluster_assignments)[selected_clusters]
cluster_genes
selected_clusters <- which(cluster_assignments %in% c(2, 3))
cluster_genes <- names(cluster_assignments)[selected_clusters]
length(cluster_genes)
cluster_gene_list <- list(
cluster_2 = names(cluster_assignments[cluster_assignments == 2]),
cluster_3 = names(cluster_assignments[cluster_assignments == 3])
)
cluster_gene_list
length(cluster_gene_list)
cluster_gene_list <- list(
thalomide_down = names(cluster_assignments[cluster_assignments == 2]),
thalomide_up = names(cluster_assignments[cluster_assignments == 3])
)
length(unlist(cluster_gene_list))
k_clusters <- 6
row_hclust <- p$tree_row
cluster_assignments <- cutree(row_hclust, k = k_clusters)
# 3. Create row annotation dataframe
row_annotation <- data.frame(Cluster = as.factor(cluster_assignments))
rownames(row_annotation) <- names(cluster_assignments)
# 4. Replot heatmap with row annotation
p <- pheatmap(
heatmap_data_matrix,
color = colorRampPalette(c("blue", "white", "red"))(100),
breaks = unique(c(seq(min(heatmap_data_matrix, na.rm = TRUE), 0, length.out = 51),
seq(0, max(heatmap_data_matrix, na.rm = TRUE), length.out = 51))),
cluster_rows = TRUE,
cluster_cols = FALSE,
main = paste0("Hierarchical Clustering of the proteins for Thalidomide"),
na_col = "grey80",
show_rownames = FALSE,
show_colnames = TRUE,
annotation_row = row_annotation,
annotation_names_row = TRUE
)
n_compounds <- 10
selected_compounds <- compound_ranked_regulated[1:n_compounds]
heatmap_data <- doseresponse_log2FC %>%
filter(!is.na(Genes), compound %in% selected_compounds) %>%
mutate(compound_dose = paste(compound, dose, sep = "_")) %>%
select(Genes, compound_dose, log2FC) %>%
pivot_wider(names_from = compound_dose, values_from = log2FC)
heatmap_data
heatmap_data_matrix <- heatmap_data %>%
column_to_rownames("Genes") %>%
mutate(
across(
everything(),
~ replace(replace(., is.infinite(.) & . < 0, min(.[is.finite(.)], na.rm = TRUE)), is.na(.), 0)
)
) %>%
as.matrix()
conc_colnames <- heatmap_data %>%
select(-Genes) %>%
colnames() %>%
unique()
compound_group <- data.frame(
compound = rep(selected_compounds, each = 5)
) %>%
left_join(compounds_with_MoA %>% select(compound, Type_simp),
by = "compound") %>%
select(-compound)
rownames(compound_group) <- colnames(heatmap_data_matrix)
#compound_colors_subset <- compound_colors %>%
#  filter(
#    compound %in% compound_group$compound,
#    Type_simp %in% compound_group$Type_simp
#  )
colnames(compound_group) <- c("Type")
# Generate annotation colors for compounds and types
#annotation_colors <- list(
#  Compound = setNames(compound_colors_subset$compound_color, compound_colors_subset$compound),
#  Type = setNames(type_palette[compound_group$Type], compound_group$Type)
#)
# Plot
pheatmap(
heatmap_data_matrix,
color = colorRampPalette(c("blue", "white", "red"))(100),
breaks = unique(c(seq(min(heatmap_data_matrix, na.rm = TRUE), 0, length.out = 51),
seq(0, max(heatmap_data_matrix, na.rm = TRUE), length.out = 51))),
cluster_rows = TRUE,
cluster_cols = TRUE,
main = "Hierarchical Clustering of log2FC for Selected Compounds",
na_col = "grey80",
show_rownames = FALSE,
show_colnames = FALSE,
annotation_col = compound_group,
#annotation_colors = annotation_colors,
#annotation_names_col = FALSE,
legend_labels = c("Compound", "Type")
)
n_compounds <- length(compound_ranked_regulated)
selected_compounds <- compound_ranked_regulated[1:n_compounds]
heatmap_data <- doseresponse_log2FC %>%
filter(!is.na(Genes), compound %in% selected_compounds) %>%
mutate(compound_dose = paste(compound, dose, sep = "_")) %>%
select(Genes, compound_dose, log2FC) %>%
pivot_wider(names_from = compound_dose, values_from = log2FC)
heatmap_data
heatmap_data_matrix <- heatmap_data %>%
column_to_rownames("Genes") %>%
mutate(
across(
everything(),
~ replace(replace(., is.infinite(.) & . < 0, min(.[is.finite(.)], na.rm = TRUE)), is.na(.), 0)
)
) %>%
as.matrix()
conc_colnames <- heatmap_data %>%
select(-Genes) %>%
colnames() %>%
unique()
compound_group <- data.frame(
compound = rep(selected_compounds, each = 5)
) %>%
left_join(compounds_with_MoA %>% select(compound, Type_simp),
by = "compound") %>%
select(-compound)
rownames(compound_group) <- colnames(heatmap_data_matrix)
#compound_colors_subset <- compound_colors %>%
#  filter(
#    compound %in% compound_group$compound,
#    Type_simp %in% compound_group$Type_simp
#  )
colnames(compound_group) <- c("Type")
# Generate annotation colors for compounds and types
#annotation_colors <- list(
#  Compound = setNames(compound_colors_subset$compound_color, compound_colors_subset$compound),
#  Type = setNames(type_palette[compound_group$Type], compound_group$Type)
#)
# Plot
pheatmap(
heatmap_data_matrix,
color = colorRampPalette(c("blue", "white", "red"))(100),
breaks = unique(c(seq(min(heatmap_data_matrix, na.rm = TRUE), 0, length.out = 51),
seq(0, max(heatmap_data_matrix, na.rm = TRUE), length.out = 51))),
cluster_rows = TRUE,
cluster_cols = TRUE,
main = "Hierarchical Clustering of log2FC for Selected Compounds",
na_col = "grey80",
show_rownames = FALSE,
show_colnames = FALSE,
annotation_col = compound_group,
#annotation_colors = annotation_colors,
#annotation_names_col = FALSE,
legend_labels = c("Compound", "Type")
)
selected_compounds <- 'Thalidomide'
heatmap_data <- doseresponse_log2FC %>%
filter(!is.na(Genes), compound %in% selected_compounds) %>%
mutate(compound_dose = paste(compound, dose, sep = "_")) %>%
select(Genes, compound_dose, log2FC) %>%
pivot_wider(names_from = compound_dose, values_from = log2FC)
heatmap_data
heatmap_data_matrix <- heatmap_data %>%
column_to_rownames("Genes") %>%
.[rowSums(. == -Inf) == 0, ] %>%
mutate(
across(
everything(),
~ replace(replace(., is.infinite(.) & . < 0, min(.[is.finite(.)], na.rm = TRUE)), is.na(.), 0)
)
) %>%
#mutate(
#  across(
#    everything(),
#    ~ replace(replace(., is.infinite(.) & . < 0, min(.[is.finite(.)], na.rm = TRUE)), is.na(.), 0)
#    )
#  ) %>%
as.matrix()
conc_colnames <- heatmap_data %>%
select(-Genes) %>%
colnames() %>%
unique()
compound_group <- data.frame(
compound = rep(selected_compounds, each = 5)
)
rownames(compound_group) <- colnames(heatmap_data_matrix)
# Plot
p <- pheatmap::pheatmap(
heatmap_data_matrix,
color = colorRampPalette(c("blue", "white", "red"))(100),
breaks = unique(c(seq(min(heatmap_data_matrix, na.rm = TRUE), 0, length.out = 51),
seq(0, max(heatmap_data_matrix, na.rm = TRUE), length.out = 51))),
cluster_rows = TRUE,
cluster_cols = FALSE,
main = "Hierarchical Clustering of the proteins for Thalidomide",
na_col = "grey80",
show_rownames = FALSE,
show_colnames = TRUE,
#annotation_col = compound_group,
annotation_names_col = FALSE
)
k_clusters <- 6
row_hclust <- p$tree_row
cluster_assignments <- cutree(row_hclust, k = k_clusters)
# 3. Create row annotation dataframe
row_annotation <- data.frame(Cluster = as.factor(cluster_assignments))
rownames(row_annotation) <- names(cluster_assignments)
# 4. Replot heatmap with row annotation
p <- pheatmap(
heatmap_data_matrix,
color = colorRampPalette(c("blue", "white", "red"))(100),
breaks = unique(c(seq(min(heatmap_data_matrix, na.rm = TRUE), 0, length.out = 51),
seq(0, max(heatmap_data_matrix, na.rm = TRUE), length.out = 51))),
cluster_rows = TRUE,
cluster_cols = FALSE,
main = paste0("Hierarchical Clustering of the proteins for Thalidomide"),
na_col = "grey80",
show_rownames = FALSE,
show_colnames = TRUE,
annotation_row = row_annotation,
annotation_names_row = TRUE
)
k_clusters <- 6
row_hclust <- p$tree_row
cluster_assignments <- cutree(row_hclust, k = k_clusters)
# 3. Create row annotation dataframe
row_annotation <- data.frame(Cluster = as.factor(cluster_assignments))
rownames(row_annotation) <- names(cluster_assignments)
# 4. Replot heatmap with row annotation
p <- pheatmap(
heatmap_data_matrix,
color = colorRampPalette(c("blue", "white", "red"))(100),
breaks = unique(c(seq(min(heatmap_data_matrix, na.rm = TRUE), 0, length.out = 51),
seq(0, max(heatmap_data_matrix, na.rm = TRUE), length.out = 51))),
cluster_rows = TRUE,
cluster_cols = FALSE,
main = paste0("Hierarchical Clustering of the proteins for ", selected_compounds),
na_col = "grey80",
show_rownames = FALSE,
show_colnames = TRUE,
annotation_row = row_annotation,
annotation_names_row = TRUE
)
